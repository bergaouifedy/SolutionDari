@model  DariTn.Models.Entities.AssetAdv

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>
<div>

    <div style="float:left">
        <h4>AssetAdv</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.@ref)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.@ref)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.type)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.type)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.addedDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.addedDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.price)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.price)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.surface)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.surface)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.street)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.street)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.city)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.city)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.state)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.state)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.postalCode)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.postalCode)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.nbrRooms)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.nbrRooms)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.nbrComplaints)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.nbrComplaints)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.nbrFloor)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.nbrFloor)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.floor)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.floor)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.nbrBathrooms)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.nbrBathrooms)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.furnished)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.furnished)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.garage)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.garage)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.parking)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.parking)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.pool)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.pool)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.category)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.category)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.availability)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.availability)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.status)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.status)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.capacity)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.capacity)
            </dd>

        </dl>
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.id }) |
            @Html.ActionLink("Back to List", "Index") |

            @if (Model.virtualTour == null)
            {
                <a style="color:red;border-radius:10px;border-color:blue;">There's no Virtual Tours</a>
            }
            else
            {
                @Html.ActionLink(linkText: "Virtual Tour", actionName: "Index", controllerName: "VirtualTours", routeValues: new { id = Model.id }, htmlAttributes: new { @class = "infos" })

            }


        </p>
    </div>
    <div style="float:right;">

        @if (Model.localisation != null)
        {
            <style>
                #map {
                    height: 600px;
                    width: 600px;
                    border-radius: 2%;
                }

                html, body {
                    height: 100%;
                    margin: 0;
                    padding: 0;
                }
            </style>

            <div style="margin-left: 10px;">


                <h1>Asset's location:</h1>

                <div id="map"></div>
                <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
                <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA3Y-n9oKUBy9he2U9aHF3a5R5MYGDXZJ4&callback=initMap&libraries=&v=weekly"
                        async>

                </script>

                <script>
            let map;

            var latit = @Html.Raw(Json.Encode(Model.localisation.latitude));
            var longti = @Html.Raw(Json.Encode(Model.localisation.longtitude));
            function initMap() {

                var myCenter = new google.maps.LatLng(latit, longti);
                var mapProp = { center: myCenter, zoom: 7, scrollwheel: false, draggable: true, mapTypeId: google.maps.MapTypeId.ROADMAP };
                map = new google.maps.Map(document.getElementById("map"), mapProp);
                var marker = new google.maps.Marker({ position: myCenter });
                marker.setMap(map);
            }
                </script>


            </div>
        }


    </div>


</div>
       
