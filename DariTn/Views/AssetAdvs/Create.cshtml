@model DariTn.Models.Entities.AssetAdv

@{
    //Layout = "~/Views/Admin/_LayoutAdmin.cshtml";
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()




<div class="form-horizontal">
    <h4>Post your own advertisement for your property !</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        <div class="control-label col-md-2">Description: </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">Type: (<b>Apartment</b>, <b>House</b>, <b>Land</b>, <b>Office</b>)</div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="control-label col-md-2">Is this property for <b>Rent</b> or <b>Sale</b> ? </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="control-label col-md-2">Price: </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">Surface: </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.surface, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.surface, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">Street: </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.street, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.street, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">City: </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">State: </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">Postal Code: </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.postalCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.postalCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">Number of rooms: </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.nbrRooms, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nbrRooms, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="control-label col-md-2">Number of floors: </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.nbrFloor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nbrFloor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">Located in floor: </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.floor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.floor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">Number of bathrooms: </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.nbrBathrooms, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nbrBathrooms, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">Is this property furnished ? </div>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.furnished)
                @Html.ValidationMessageFor(model => model.furnished, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">Does this property have a garage ? </div>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.garage)
                @Html.ValidationMessageFor(model => model.garage, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">Does this property have a parking spot </div>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.parking)
                @Html.ValidationMessageFor(model => model.parking, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">Is there a pool in this property ? </div>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.pool)
                @Html.ValidationMessageFor(model => model.pool, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>




    <div class="form-group">
        <div class="control-label col-md-2">Capacity: </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.capacity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.capacity, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-custom">Create <i class="fa fa-send"></i></button>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to browsing", "Index",null,new { @class = "btn btn-primary btn-lg" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
