@model  DariTn.Models.Entities.AssetAdv

@{
    ViewBag.Title = "Details2";
}

<h2>Details</h2>
<style>
    .boxed {
        border: groove;
        border-radius: 10px;
        border-color: red;
        margin: 50px;
    }
</style>
<div style="height:350px;">

    <div style="float:left" class="boxed">
        <h4 style="color:orangered;">AssetAdv</h4>
        <hr />
        <div>
            <div>
                <div>
                    <ul>
                        <li><i class="fa fa-chevron-right"></i>&nbsp;&nbsp; @Html.DisplayFor(model => model.description)</li>
                        <li><i class="fa fa-chevron-right"></i>&nbsp;&nbsp;@Html.DisplayFor(model => model.category)</li>
                        <li><i class="fa fa-chevron-right"></i>&nbsp;&nbsp;@Html.DisplayFor(model => model.availability)</li>
                        <li><i class="fa fa-chevron-right"></i>&nbsp;&nbsp;@Html.DisplayFor(model => model.capacity)</li>
                        <li><i class="fa fa-chevron-right"></i>&nbsp;&nbsp;This asset is for @Html.DisplayFor(model => model.type)</li>
                        <li><i class="fa fa-chevron-right"></i>&nbsp;&nbsp;@Html.DisplayFor(model => model.surface) m²</li>
                        <li>
                            <i class="fa fa-chevron-right"></i>&nbsp;&nbsp;Located in @Html.DisplayFor(model => model.street) street ,@Html.DisplayFor(model => model.city) city,
                            state of @Html.DisplayFor(model => model.state) .
                        </li>
                        <li>
                            <i class="fa fa-chevron-right"></i>&nbsp;&nbsp;It has @Html.DisplayFor(model => model.nbrRooms) rooms , @Html.DisplayFor(model => model.nbrFloor) floors,
                            @Html.DisplayFor(model => model.nbrBathrooms) bathrooms
                        </li>
                        <li>
                            @if (Model.furnished == true)
                            {
                                <i class="fa fa-chevron-right"></i><i>&nbsp; &nbsp; furniched asset</i>
                            }
                            else
                            {
                                <i class="fa fa-chevron-right"></i><i>&nbsp; &nbsp; not furniched asset</i>
                            }
                        </li>
                        <li>
                            @if (Model.garage == true)
                            {
                                <i class="fa fa-chevron-right"></i><i>&nbsp; &nbsp; with garage </i>
                            }
                            else
                            {
                                <i class="fa fa-chevron-right"></i><i>&nbsp; &nbsp; there is no garage </i>
                            }
                        </li>
                        <li>
                            @if (Model.parking == true)
                            {
                                <i class="fa fa-chevron-right"></i><i>&nbsp; &nbsp; with parking area </i>
                            }
                            else
                            {
                                <i class="fa fa-chevron-right"></i><i>&nbsp; &nbsp; there is no parking area </i>
                            }
                        </li>
                        <li>
                            @if (Model.pool == true)
                            {
                                <i class="fa fa-chevron-right"></i><i>&nbsp; &nbsp; with pool </i>
                            }
                            else
                            {
                                <i class="fa fa-chevron-right"></i><i>&nbsp; &nbsp; there is no pool </i>
                            }
                        </li>

                    </ul>
                    <p class="footer">
                        <span class="title">Price : </span><span class="label label-danger text-left">@Html.DisplayFor(model => model.price) DT</span>
                    </p>
                </div>
            </div>
            @Html.ActionLink("Back to List", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-success btn-lg" }) |


            @if (Model.virtualTour == null)
            {
                <a style="color:red;border-radius:10px;border-color:blue;">There's no Virtual Tours</a>
            }
            else
            {
                @Html.ActionLink(linkText: "Virtual Tour", actionName: "Index", controllerName: "VirtualTours", routeValues: new { id = Model.id }, htmlAttributes: new { @class = "btn btn-primary btn-lg" })

            }

          
                @Html.ActionLink(linkText: "Add TimeSlots", actionName: "Create", controllerName: "TimeSlots", routeValues: new { id = Model.id }, htmlAttributes: new { @class = "btn btn-primary btn-lg" })

            
            <br />
                @Html.ActionLink(linkText: "TimeSlots", actionName: "Index2", controllerName: "TimeSlots", routeValues: new { id = Model.id }, htmlAttributes: new { @class = "btn btn-primary btn-lg" })

            

        </div>

    </div>
    <div style="float:left;margin-left:10px;" class="boxed" ;>

        @if (Model.localisation != null)
        {
            <style>
                #map {
                    height: 400px;
                    width: 600px;
                    border-radius: 2%;
                }

                html, body {
                    height: 100%;
                    margin: 0;
                    padding: 0;
                }
            </style>

            <div>


                <h4 style="color:orangered;">Asset's location:</h4>

                <div id="map"></div>
                <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
                <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA3Y-n9oKUBy9he2U9aHF3a5R5MYGDXZJ4&callback=initMap&libraries=&v=weekly"
                        async>

                </script>

                <script>
            let map;

            var latit = @Html.Raw(Json.Encode(Model.localisation.latitude));
            var longti = @Html.Raw(Json.Encode(Model.localisation.longtitude));
            function initMap() {

                var myCenter = new google.maps.LatLng(latit, longti);
                var mapProp = { center: myCenter, zoom: 7, scrollwheel: false, draggable: true, mapTypeId: google.maps.MapTypeId.ROADMAP };
                map = new google.maps.Map(document.getElementById("map"), mapProp);
                var marker = new google.maps.Marker({ position: myCenter });
                marker.setMap(map);
            }
                </script>


            </div>
        }
        else
        {
            <i>GOOGLE MAPS' LOCATION NOT AVAILABLE</i>
        }


    </div>


</div>

